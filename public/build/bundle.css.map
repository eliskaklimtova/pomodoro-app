{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "TaskList.svelte",
    "Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport TaskList from './components/TaskList.svelte';\n\timport Timer from './components/Timer.svelte';\n\n\tlet title = 'Pomodoro Timer';\n\tlet activeTask;\n\n\tconst updateActiveTask = event => {\n\t\tactiveTask = event.detail.task;\n\t};\n</script>\n\n<main>\n\t<h1>{title}</h1>\n\t<Timer {activeTask}/>\n\t<TaskList on:taskSelected={updateActiveTask}/>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: var(--accent);\n\t\ttext-transform: uppercase;\n\t\tfont-size: 6em;\n\t\tmargin-bottom: 5rem;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n\timport { afterUpdate } from 'svelte';\n\timport { createEventDispatcher } from 'svelte';\n\timport { get } from 'svelte/store';\n\timport {activeTask} from './../store.js';\n\timport {Task} from './../Task.js';\n\t\n\tconst dispatch = createEventDispatcher();\n\n\tlet taskPendingFocus = false;\n\tlet lastInput;\n\t\n\tlet tasks = [];\n\n\t$: allExpectedPomodoros = tasks.reduce((acc, t) => acc + t.expectedPomodoros, 0);\n\n\tconst addTask = () => {\n\t\ttasks = tasks.concat(new Task());\n\t\ttaskPendingFocus = true;\n\t};\n\n\tconst removeTask = task => {\n\t\tconst index = tasks.indexOf(task);\n\t\tif ($activeTask === task) {\n\t\t\tselectTask(undefined);\n\t\t}\n\t\ttasks = [...tasks.slice(0, index), ...tasks.slice(index + 1)];\n\t};\n\n\tconst selectTask = task => {\n\t\t$activeTask = task;\n\t};\n\n\tconst focusNewTask = () => {\n\t\tif (taskPendingFocus && lastInput) {\n\t\t\tlastInput.focus();\n\t\t\ttaskPendingFocus = false;\n\t\t}\n\t};\n\n\tafterUpdate(focusNewTask);\n</script>\n\n{#if tasks.length === 0}\n\t<h3>You haven't added any tasks yet.</h3>\n{:else}\n\t<ul>\n\t\t{#each tasks as task}\n\t\t\t<li class:active={$activeTask === task}>\n\t\t\t\t<button class=\"select-task\" on:click={() => selectTask(task)}></button>\n\t\t\t\t<input class=\"description\" type=\"text\" bind:value={task.description} bind:this={lastInput}>\n\t\t\t\t<input class=\"pomodoros\" type=\"number\" bind:value={task.expectedPomodoros}>\n\t\t\t\t<input class=\"pomodoros small\" bind:value={task.actualPomodoros} disabled>\n\t\t\t\t<button on:click={removeTask(task)}>Delete</button>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n{/if}\n\n<button class=\"primary\" on:click={addTask}>Add task</button>\n\n{#if tasks.length !== 0}\n\t<h3>Today you will complete {allExpectedPomodoros} pomodoros.</h3>\n{/if}\n\n<style>\n\tul {\n\t\tlist-style: none;\n\t}\n\t.active input,\n  .active button {\n    border-color: var(--accent);\n    background-color: var(--accent);\n    color: white;\n\t\ttransition: background-color .2s, color .2s, border-color .2s;\n\t\topacity: 0.6;\n\t}\n\t.select-task {\n\t\tborder-radius: 50px;\n\t\tvertical-align: middle;\n\t}\n\t.description {\n\t\tmin-width: 400px;\n\t}\n\t.pomodoros { \n\t\tmax-width: 100px;\n\t}\n\t.pomodoros.small { \n  max-width: 40px;\n  text-align: center;\n\t}\n\t.active input[disabled] {\n\t\topacity: 0.3;\n\t}\n</style>",
    "<script>\n\timport {activeTask} from './../store.js';\n\n\tconst minutesToSeconds = minutes => minutes * 60;\n\tconst secondsToMinutes = seconds => Math.floor(seconds / 60);\n\tconst padWithZeroes = number => number.toString().padStart(2, '0');\n\tconst State = {idle: 'idle', inProgress: 'in progress', resting: 'resting'};\n\n\tconst POMODORO_S = minutesToSeconds(25);\n\tconst LONG_BREAK_S = minutesToSeconds(20);\n\tconst SHORT_BREAK_S = minutesToSeconds(5);\n\n\tlet currentState = State.idle;\n\tlet pomodoroTime = POMODORO_S;\n\tlet completedPomodoros = 0;\n\tlet interval;\n\n\tconst formatTime = (timeInSeconds) => {\n\t\tconst minutes = secondsToMinutes(timeInSeconds);\n\t\tconst remainingSeconds = timeInSeconds % 60;\n\t\treturn `${padWithZeroes(minutes)}:${padWithZeroes(remainingSeconds)}`;\n\t};\n\n\tconst startPomodoro = () => {\n\t\tcurrentState = State.inProgress;\n\t\tinterval = setInterval(() => {\n\t\t\tif (pomodoroTime === 0) {\n\t\t\t\tcompletePomodoro();\n\t\t\t}\n\t\t\tpomodoroTime -= 1;\n\t\t}, 1000);\n\t};\n\n\tconst completePomodoro = () => {\n\t\t//clearInterval(interval);\n\t\t$activeTask.actualPomodoros++;\n\t\tcompletedPomodoros++;\n\t\tif (completedPomodoros === 4) {\n\t\t\trest(LONG_BREAK_S);\n\t\t\tcompletedPomodoros = 0;\n\t\t} else {\n\t\t\trest(SHORT_BREAK_S);\n\t\t}\n\t};\n\n\tconst cancelPomodoro = () => {\n\t\t// TODO: Add some logic to prompt the user to write down the cause of cancelling the Pomodoro\n\t\tidle();\n\t};\n\n\tconst rest = time => {\n\t\tcurrentState = State.resting;\n\t\tpomodoroTime = time;\n\t\tinterval = setInterval(() => {\n\t\t\tif (pomodoroTime === 0) {\n\t\t\t\tidle();\n\t\t\t}\n\t\t\tpomodoroTime -= 1;\n\t\t}, 1000);\n\t};\n\n\tconst idle = () => {\n\t\tcurrentState = State.idle;\n\t\tclearInterval(interval);\n\t\tpomodoroTime = POMODORO_S;\n\t};\n</script>\n\n<section>\n\t<time>{formatTime(pomodoroTime)}</time>\n\t<footer>\n\t\t<button class=\"primary\" on:click={startPomodoro} disabled={currentState !== State.idle || !$activeTask}>Start</button>\n\t\t<button on:click={cancelPomodoro} disabled={currentState !== State.inProgress || !$activeTask}>Cancel</button>\n\t</footer>\n</section>\n\n<style>\n  time {\n    display: block;\n    font-size: 5em;\n    font-weight: 300;\n    margin-bottom: 0.2em;\n  }\n</style>"
  ],
  "names": [],
  "mappings": "AAmBC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,QAAQ,CAAC,CACpB,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;AC4BD,EAAE,8BAAC,CAAC,AACH,UAAU,CAAE,IAAI,AACjB,CAAC,AACD,sBAAO,CAAC,oBAAK,CACZ,sBAAO,CAAC,MAAM,eAAC,CAAC,AACd,YAAY,CAAE,IAAI,QAAQ,CAAC,CAC3B,gBAAgB,CAAE,IAAI,QAAQ,CAAC,CAC/B,KAAK,CAAE,KAAK,CACd,UAAU,CAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,CAC7D,OAAO,CAAE,GAAG,AACb,CAAC,AACD,YAAY,8BAAC,CAAC,AACb,aAAa,CAAE,IAAI,CACnB,cAAc,CAAE,MAAM,AACvB,CAAC,AACD,YAAY,8BAAC,CAAC,AACb,SAAS,CAAE,KAAK,AACjB,CAAC,AACD,UAAU,8BAAC,CAAC,AACX,SAAS,CAAE,KAAK,AACjB,CAAC,AACD,UAAU,MAAM,8BAAC,CAAC,AACjB,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,sBAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAC,CAAC,AACxB,OAAO,CAAE,GAAG,AACb,CAAC;AChBA,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,KAAK,AACtB,CAAC"
}